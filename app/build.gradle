apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "br.com.gabrielmarcos.mavel_app"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "MARVEL_BASE_URL", '"http://gateway.marvel.com/"'

        buildConfigField("String", "MARVEL_TS", MARVEL_TS)
        buildConfigField("String", "MARVEL_PUBLIC_KEY", MARVEL_PUBLIC_KEY)
        buildConfigField("String", "MARVEL_HASH", MARVEL_HASH)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        debug {
            res {
                srcDirs 'src/debug/res', 'src/debug/resources'
            }
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    //AndroidX
    implementation "androidx.appcompat:appcompat:$androidx"
    implementation "androidx.core:core-ktx:$ktxcore"
    implementation "androidx.constraintlayout:constraintlayout:$constraint"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"
    implementation "androidx.fragment:fragment-ktx:$fragment"

    //Material Components
    implementation "com.google.android.material:material:$material"

    //Lottie
    implementation "com.airbnb.android:lottie:$lottie"

    //Dagger
    implementation "com.google.dagger:dagger:$dagger"
    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpInterceptor"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide"


    //Test
    testImplementation "junit:junit:$junit"
    testImplementation "org.mockito:mockito-core:$mockito"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesTest"
    testImplementation "androidx.arch.core:core-testing:$androidArchTest"
    androidTestImplementation "androidx.test.ext:junit:$junitTest"
    androidTestImplementation "androidx.test.espresso:espresso-core:$expressoTest"
    androidTestImplementation "org.mockito:mockito-android:$mockito"
}
